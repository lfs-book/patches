Submitted By: Robert Connolly <robert at linuxfromscratch dot org> (ashes)
Date: 2004-08-30
Initial Package Version: 2.3.3
Upstream Status: Rejected Upstream
Origin: This is the combination of the three following patches:
	glibc-2.3.3_pre20040117-pt_pax.diff
	glibc-2.3.3-dl_execstack-PaX-support.patch
	glibc-2.3.2-iconvconfig-name_insert.patch
Description: This is needed for Pax. http://pax.grsecurity.net/

Also see:
http://www.linuxfromscratch.org/hlfs/

diff -Naur glibc-2.3.3.orig/elf/elf.h glibc-2.3.3.pax/elf/elf.h
--- glibc-2.3.3.orig/elf/elf.h	2003-06-26 19:54:29.000000000 +0000
+++ glibc-2.3.3.pax/elf/elf.h	2004-08-30 15:01:32.000000000 +0000
@@ -566,12 +566,25 @@
 #define PT_HIOS		0x6fffffff	/* End of OS-specific */
 #define PT_LOPROC	0x70000000	/* Start of processor-specific */
 #define PT_HIPROC	0x7fffffff	/* End of processor-specific */
+#define PT_PAX_FLAGS	0x65041580	/* Indicates PaX flag markings */
 
 /* Legal values for p_flags (segment flags).  */
 
 #define PF_X		(1 << 0)	/* Segment is executable */
 #define PF_W		(1 << 1)	/* Segment is writable */
 #define PF_R		(1 << 2)	/* Segment is readable */
+#define PF_PAGEEXEC	(1 << 4)	/* Enable  PAGEEXEC */
+#define PF_NOPAGEEXEC	(1 << 5)	/* Disable PAGEEXEC */
+#define PF_SEGMEXEC	(1 << 6)	/* Enable  SEGMEXEC */
+#define PF_NOSEGMEXEC	(1 << 7)	/* Disable SEGMEXEC */
+#define PF_MPROTECT	(1 << 8)	/* Enable  MPROTECT */
+#define PF_NOMPROTECT	(1 << 9)	/* Disable MPROTECT */
+#define PF_RANDEXEC	(1 << 10)	/* Enable  RANDEXEC */
+#define PF_NORANDEXEC	(1 << 11)	/* Disable RANDEXEC */
+#define PF_EMUTRAMP	(1 << 12)	/* Enable  EMUTRAMP */
+#define PF_NOEMUTRAMP	(1 << 13)	/* Disable EMUTRAMP */
+#define PF_RANDMMAP	(1 << 14)	/* Enable  RANDMMAP */
+#define PF_NORANDMMAP	(1 << 15)	/* Disable RANDMMAP */
 #define PF_MASKOS	0x0ff00000	/* OS-specific */
 #define PF_MASKPROC	0xf0000000	/* Processor-specific */
 
diff -Naur glibc-2.3.3.orig/iconv/iconvconfig.c glibc-2.3.3.pax/iconv/iconvconfig.c
--- glibc-2.3.3.orig/iconv/iconvconfig.c	2003-06-11 21:38:47.000000000 +0000
+++ glibc-2.3.3.pax/iconv/iconvconfig.c	2004-08-30 15:01:44.000000000 +0000
@@ -988,6 +988,34 @@
                               module name offset
                          (following last entry with step count 0)
 */
+
+static struct hash_entry *hash_table;
+static size_t hash_size;
+
+/* Function to insert the names.  */
+static void name_insert (const void *nodep, VISIT value, int level)
+{
+  struct name *name;
+  unsigned int idx;
+  unsigned int hval2;
+
+  if (value != leaf && value != postorder)
+    return;
+
+  name = *(struct name **) nodep;
+  idx = name->hashval % hash_size;
+  hval2 = 1 + name->hashval % (hash_size - 2);
+
+  while (hash_table[idx].string_offset != 0)
+    if ((idx += hval2) >= hash_size)
+      idx -= hash_size;
+
+  hash_table[idx].string_offset = strtaboffset (name->strent);
+
+  assert (name->module_idx != -1);
+  hash_table[idx].module_idx = name->module_idx;
+}
+
 static int
 write_output (void)
 {
@@ -995,8 +1023,6 @@
   char *string_table;
   size_t string_table_size;
   struct gconvcache_header header;
-  struct hash_entry *hash_table;
-  size_t hash_size;
   struct module_entry *module_table;
   char *extra_table;
   char *cur_extra_table;
@@ -1009,30 +1035,6 @@
 		+ strlen (".XXXXXX")];
   char finalname[prefix_len + sizeof (GCONV_MODULES_CACHE)];
 
-  /* Function to insert the names.  */
-  static void name_insert (const void *nodep, VISIT value, int level)
-    {
-      struct name *name;
-      unsigned int idx;
-      unsigned int hval2;
-
-      if (value != leaf && value != postorder)
-	return;
-
-      name = *(struct name **) nodep;
-      idx = name->hashval % hash_size;
-      hval2 = 1 + name->hashval % (hash_size - 2);
-
-      while (hash_table[idx].string_offset != 0)
-	if ((idx += hval2) >= hash_size)
-	  idx -= hash_size;
-
-      hash_table[idx].string_offset = strtaboffset (name->strent);
-
-      assert (name->module_idx != -1);
-      hash_table[idx].module_idx = name->module_idx;
-    }
-
   /* Open the output file.  */
   assert (GCONV_MODULES_CACHE[0] == '/');
   strcpy (stpcpy (mempcpy (tmpfname, prefix, prefix_len), GCONV_MODULES_CACHE),
diff -Naur glibc-2.3.3.orig/sysdeps/unix/sysv/linux/dl-execstack.c glibc-2.3.3.pax/sysdeps/unix/sysv/linux/dl-execstack.c
--- glibc-2.3.3.orig/sysdeps/unix/sysv/linux/dl-execstack.c	2003-11-27 05:22:03.000000000 +0000
+++ glibc-2.3.3.pax/sysdeps/unix/sysv/linux/dl-execstack.c	2004-08-30 15:01:49.000000000 +0000
@@ -47,11 +47,17 @@
 		      PROT_READ|PROT_WRITE|PROT_EXEC|PROT_GROWSDOWN) == 0)
 	goto return_success;
 #  if __ASSUME_PROT_GROWSUPDOWN == 0
-      if (errno == EINVAL)
+      if (errno == EINVAL) {
 	no_growsdown = true;
-      else
+      } else {
+#  endif
+	if (errno == EACCES)		/* PAX is enabled */
+	  return 0;
+	else
+	  return errno;
+#  if __ASSUME_PROT_GROWSUPDOWN == 0
+      }
 #  endif
-	return errno;
     }
 # endif
 
@@ -73,8 +79,11 @@
 	page -= size;
       else
 	{
-	  if (errno != ENOMEM)	/* Unexpected failure mode.  */
+	  if (errno == EACCES) {	/* PAX is enabled */
+	    return 0;
+	  } else if (errno != ENOMEM) {	/* Unexpected failure mode.  */
 	    return errno;
+	  }
 
 	  if (size == GL(dl_pagesize))
 	    /* We just tried to mprotect the top hole page and failed.
@@ -105,11 +114,17 @@
 		      PROT_READ|PROT_WRITE|PROT_EXEC|PROT_GROWSUP) == 0)
 	goto return_success;
 #  if __ASSUME_PROT_GROWSUPDOWN == 0
-      if (errno == EINVAL)
+      if (errno == EINVAL) {
 	no_growsup = true;
-      else
+      } else {
+#  endif
+	if (errno == EACCES)		/* PAX is enabled */
+	  return 0;
+	else
+	  return errno;
+#  if __ASSUME_PROT_GROWSUPDOWN == 0
+      }
 #  endif
-	return errno;
     }
 # endif
 
@@ -130,8 +145,11 @@
 	page += size;
       else
 	{
-	  if (errno != ENOMEM)	/* Unexpected failure mode.  */
+	  if (errno == EACCES) {	/* PAX is enabled */
+	    return 0;
+	  } else if (errno != ENOMEM) {	/* Unexpected failure mode.  */
 	    return errno;
+	  }
 
 	  if (size == GL(dl_pagesize))
 	    /* We just tried to mprotect the lowest hole page and failed.
